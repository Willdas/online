<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.online.cms.cms.dao.ElectronBookMapper" >
  <resultMap id="BaseResultMap" type="com.online.cms.cms.domain.ElectronBook" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="describes" property="describes" jdbcType="VARCHAR" />
    <result column="publish_date" property="publishDate" jdbcType="DATE" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="buy_link" property="buyLink" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, book_name, author, describes, publish_date, type, price, file_path, file_url, buy_link
  </sql>
  <select id="findAll" resultMap="BaseResultMap">
  	 select id, book_name, author, describes, publish_date, type, price, file_path, file_url, buy_link 
  	 from books 
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from books
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from books
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.online.cms.cms.domain.ElectronBook" >
    insert into books (id, book_name, author, 
      describes, publish_date, type, 
      price,file_path,file_url,buy_link)
    values (#{id,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{describes,jdbcType=VARCHAR}, #{publishDate,jdbcType=DATE}, #{type,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{filePath,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, #{buyLink,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.online.cms.cms.domain.ElectronBook" >
    insert into books
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="describes != null" >
        describes,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="filePath != null" >
        file_path,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="fileUrl != null" >
        buy_link,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="describes != null" >
        #{describes,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=DATE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
       <if test="type != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{buyLink,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update books
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null" >
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.describes != null" >
        describes = #{record.describes,jdbcType=VARCHAR},
      </if>
      <if test="record.publishDate != null" >
        publish_date = #{record.publishDate,jdbcType=DATE},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null" >
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        file_url = #{record.fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        buy_link = #{record.buyLink,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update books
    set id = #{record.id,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      describes = #{record.describes,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=DATE},
      type = #{record.type,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      file_url = #{record.fileUrl,jdbcType=VARCHAR},
      buy_link = #{record.buyLink,jdbcType=VARCHAR},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.online.cms.cms.domain.ElectronBook" >
    update books
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="describes != null" >
        describes = #{describes,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        publish_date = #{publishDate,jdbcType=DATE},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        buy_link = #{buyLink,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.online.cms.cms.domain.ElectronBook" >
    update books
    set book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      describes = #{describes,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=DATE},
      type = #{type,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      buy_link = #{buyLink,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>